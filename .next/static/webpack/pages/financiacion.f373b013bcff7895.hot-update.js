"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/financiacion",{

/***/ "./helpers/financingHelpers.js":
/*!*************************************!*\
  !*** ./helpers/financingHelpers.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"computeIRR\": function() { return /* binding */ computeIRR; },\n/* harmony export */   \"formatNit\": function() { return /* binding */ formatNit; },\n/* harmony export */   \"generateMunicipalities\": function() { return /* binding */ generateMunicipalities; },\n/* harmony export */   \"generateValidYears\": function() { return /* binding */ generateValidYears; },\n/* harmony export */   \"generateVerificationDigit\": function() { return /* binding */ generateVerificationDigit; },\n/* harmony export */   \"getPaymentValue\": function() { return /* binding */ getPaymentValue; },\n/* harmony export */   \"getProjectCost\": function() { return /* binding */ getProjectCost; },\n/* harmony export */   \"optionsInitialValue\": function() { return /* binding */ optionsInitialValue; },\n/* harmony export */   \"updateChartData\": function() { return /* binding */ updateChartData; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var helpers_texts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! helpers/texts */ \"./helpers/texts.js\");\n\n\n\nvar generateVerificationDigit = function(nit) {\n    var number;\n    var verificationDigit;\n    var nitWithoutPoint = nit.replaceAll(\".\", \"\");\n    var numberOfNit = [];\n    for(var i = 0; i < nit.length; i++)numberOfNit.push(Number(nitWithoutPoint.charAt(i)));\n    number = numberOfNit[0] * 41;\n    number += numberOfNit[1] * 37;\n    number += numberOfNit[2] * 29;\n    number += numberOfNit[3] * 23;\n    number += numberOfNit[4] * 19;\n    number += numberOfNit[5] * 17;\n    number += numberOfNit[6] * 13;\n    number += numberOfNit[7] * 7;\n    number += numberOfNit[8] * 3;\n    number = number % 11;\n    verificationDigit = number >= 2 ? verificationDigit = 11 - number : number;\n    return verificationDigit.toString();\n};\nvar formatNit = function(nit) {\n    var formatNit = \"\";\n    // * Replace all points to nothing to obtain only the numbers of the nit and then apply the format\n    var nitWithoutPoint = nit.replaceAll(\".\", \"\");\n    // * Repeat the for nitLenght times\n    var nitLength = nitWithoutPoint.length / 3;\n    // * If the length of the nit is less than 3 then only return the numbers\n    if (nit.length < 3) return nit;\n    for(var i = 0; i < nitLength; i++){\n        formatNit += nitWithoutPoint.substring(i * 3, (i + 1) * 3) + \".\";\n    }\n    // * return and took the nit without the last point\n    return formatNit.substring(0, formatNit.length - 1);\n};\nvar generateValidYears = function() {\n    var year = new Date().getFullYear();\n    var arrayYears = [];\n    for(var i = 1950; i <= year; i++){\n        arrayYears.push({\n            id: i.toString(),\n            value: i.toString()\n        });\n    }\n    return arrayYears;\n};\nvar generateMunicipalities = function(dataColombia) {\n    return dataColombia.map(function(data) {\n        return {\n            id: \"\".concat(data.municipio, \" - \").concat(data.departamento),\n            value: \"\".concat(data.municipio, \" - \").concat(data.departamento)\n        };\n    });\n};\nvar getPaymentValue = function(valueOfCredit, numberOfPayments, effectiveAnnualInterestRate, valueInsurance, valueFee, valueKWP, valueOthers) {\n    var moduleNumberOfPayments = numberOfPayments / 12;\n    // Tasa Interes Nominal\n    var tin = (Math.pow(1 + effectiveAnnualInterestRate / 100, 30 / 360) - 1) * numberOfPayments / moduleNumberOfPayments * 100;\n    // Tipo de interÃ©s fraccionado (del periodo)\n    var im = tin / (numberOfPayments / moduleNumberOfPayments) / 100;\n    var im2 = Math.pow(1 + im, -numberOfPayments);\n    // Cuota Cap. + Int.\n    return (valueOfCredit * im / (1 - im2) + valueFee * valueKWP * 12 / 1350 + valueInsurance + valueOthers) * 1.05;\n};\n// * Get the total cost of the project\nvar getProjectCost = function(selectedMethod, wattage) {\n    if (!(selectedMethod === METHODS_OF_SAVING.SOLAR || selectedMethod === METHODS_OF_SAVING.SUPPORT_SOLAR)) return;\n    if (wattage === null) return;\n    var entireWattage = Math.ceil(wattage);\n    // * Get the cost of the project\n    var costProject = helpers_texts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].filter(function(costPertWattage) {\n        return costPertWattage.wattage === entireWattage;\n    });\n    var cb = document.querySelector(\"#rural\");\n    // console.log(cb.checked);\n    if (cb.checked) {\n        return Math.ceil(costProject[0].value2 / 100000) * 100000;\n    } else {\n        return Math.ceil(costProject[0].value / 100000) * 100000;\n    }\n};\nvar optionsInitialValue = {\n    chart: {\n        id: \"chartMain\",\n        locales: [\n            {\n                name: \"ru\"\n            }, \n        ],\n        defaultLocale: \"ru\",\n        stacked: true\n    },\n    labels: [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20, \n    ],\n    xaxis: {\n        type: \"text\"\n    },\n    yaxis: [\n        {\n            labels: {\n                formatter: function formatter(value) {\n                    return \"$ \" + Intl.NumberFormat(\"es-CO\").format(value);\n                }\n            },\n            show: true,\n            min: -500000,\n            max: 900000\n        }, \n    ],\n    markers: {\n        size: 0,\n        shape: \"square\",\n        radius: 0\n    },\n    stroke: {\n        width: [\n            0,\n            0,\n            2\n        ]\n    },\n    colors: [\n        \"#008ffb\",\n        \"#feb019\",\n        \"#00e396\"\n    ],\n    series: [\n        {\n            name: \"Cuota SEOS\",\n            type: \"column\",\n            data: [\n                {\n                    x: 1,\n                    y: 700000\n                },\n                {\n                    x: 2,\n                    y: 700000\n                },\n                {\n                    x: 3,\n                    y: 700000\n                },\n                {\n                    x: 4,\n                    y: 0\n                },\n                {\n                    x: 5,\n                    y: 0\n                },\n                {\n                    x: 6,\n                    y: 0\n                },\n                {\n                    x: 7,\n                    y: 0\n                },\n                {\n                    x: 8,\n                    y: 0\n                },\n                {\n                    x: 9,\n                    y: 0\n                },\n                {\n                    x: 10,\n                    y: 0\n                },\n                {\n                    x: 11,\n                    y: 0\n                },\n                {\n                    x: 12,\n                    y: 0\n                },\n                {\n                    x: 13,\n                    y: 0\n                },\n                {\n                    x: 14,\n                    y: 0\n                },\n                {\n                    x: 15,\n                    y: 0\n                },\n                {\n                    x: 16,\n                    y: 0\n                },\n                {\n                    x: 17,\n                    y: 0\n                },\n                {\n                    x: 18,\n                    y: 0\n                },\n                {\n                    x: 19,\n                    y: 0\n                },\n                {\n                    x: 20,\n                    y: 0\n                }, \n            ]\n        },\n        {\n            name: \"Inversi\\xf3n/Ahorro\",\n            type: \"column\",\n            data: [\n                {\n                    x: 1,\n                    y: 250000 - 700000\n                },\n                {\n                    x: 2,\n                    y: 266250 - 700000\n                },\n                {\n                    x: 3,\n                    y: 283556 - 700000\n                },\n                {\n                    x: 4,\n                    y: 301987 - 0\n                },\n                {\n                    x: 5,\n                    y: 321617 - 0\n                },\n                {\n                    x: 6,\n                    y: 342522 - 0\n                },\n                {\n                    x: 7,\n                    y: 364786 - 0\n                },\n                {\n                    x: 8,\n                    y: 388497 - 0\n                },\n                {\n                    x: 9,\n                    y: 413749 - 0\n                },\n                {\n                    x: 10,\n                    y: 440643 - 0\n                },\n                {\n                    x: 11,\n                    y: 469284 - 0\n                },\n                {\n                    x: 12,\n                    y: 499788 - 0\n                },\n                {\n                    x: 13,\n                    y: 532274 - 0\n                },\n                {\n                    x: 14,\n                    y: 566872 - 0\n                },\n                {\n                    x: 15,\n                    y: 603719 - 0\n                },\n                {\n                    x: 16,\n                    y: 642960 - 0\n                },\n                {\n                    x: 17,\n                    y: 684753 - 0\n                },\n                {\n                    x: 18,\n                    y: 729262 - 0\n                },\n                {\n                    x: 19,\n                    y: 776664 - 0\n                },\n                {\n                    x: 20,\n                    y: 827147 - 0\n                }, \n            ]\n        },\n        {\n            name: \"Factura electricidad\",\n            type: \"line\",\n            data: [\n                {\n                    x: 1,\n                    y: 250000\n                },\n                {\n                    x: 2,\n                    y: 266250\n                },\n                {\n                    x: 3,\n                    y: 283556\n                },\n                {\n                    x: 4,\n                    y: 301987\n                },\n                {\n                    x: 5,\n                    y: 321617\n                },\n                {\n                    x: 6,\n                    y: 342522\n                },\n                {\n                    x: 7,\n                    y: 364786\n                },\n                {\n                    x: 8,\n                    y: 388497\n                },\n                {\n                    x: 9,\n                    y: 413749\n                },\n                {\n                    x: 10,\n                    y: 440643\n                },\n                {\n                    x: 11,\n                    y: 469284\n                },\n                {\n                    x: 12,\n                    y: 499788\n                },\n                {\n                    x: 13,\n                    y: 532274\n                },\n                {\n                    x: 14,\n                    y: 566872\n                },\n                {\n                    x: 15,\n                    y: 603719\n                },\n                {\n                    x: 16,\n                    y: 642960\n                },\n                {\n                    x: 17,\n                    y: 684753\n                },\n                {\n                    x: 18,\n                    y: 729262\n                },\n                {\n                    x: 19,\n                    y: 776664\n                },\n                {\n                    x: 20,\n                    y: 827147\n                }, \n            ]\n        }, \n    ]\n};\nvar computeIRR = function(cf, numOfFlows, projectInitialCost) {\n    var _cfTemp;\n    var LOW_RATE = 0.01;\n    var HIGH_RATE = 0.5;\n    var MAX_ITERATION = 1000;\n    var PRECISION_REQ = 0.00000001;\n    var i = 0, j = 0;\n    var m = 0.0;\n    var oldValue = 0.00;\n    var newValue = 0.00;\n    var oldguessRate = LOW_RATE;\n    var newguessRate = LOW_RATE;\n    var guessRate = LOW_RATE;\n    var lowGuessRate = LOW_RATE;\n    var highGuessRate = HIGH_RATE;\n    var npv = 0.0;\n    var denom = 0.0;\n    var cfTemp = [];\n    (_cfTemp = cfTemp).push.apply(_cfTemp, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cf));\n    cfTemp[0] = cf[0] - projectInitialCost;\n    console.log(projectInitialCost);\n    console.log(\"cfTemp\");\n    console.log(cfTemp);\n    for(i = 0; i < MAX_ITERATION; i++){\n        npv = 0.00;\n        for(j = 0; j < numOfFlows; j++){\n            denom = Math.pow(1 + guessRate, j);\n            npv = npv + cfTemp[j] / denom;\n        }\n        // console.log(\"npv2\");\n        // console.log(npv);\n        /* Stop checking once the required precision is achieved */ if (npv > 0 && npv < PRECISION_REQ) break;\n        if (oldValue == 0) oldValue = npv;\n        else oldValue = newValue;\n        newValue = npv;\n        if (i > 0) {\n            if (oldValue < newValue) {\n                if (oldValue < 0 && newValue < 0) highGuessRate = newguessRate;\n                else lowGuessRate = newguessRate;\n            } else {\n                if (oldValue > 0 && newValue > 0) lowGuessRate = newguessRate;\n                else highGuessRate = newguessRate;\n            }\n        }\n        oldguessRate = guessRate;\n        guessRate = (lowGuessRate + highGuessRate) / 2;\n        newguessRate = guessRate;\n    }\n    return guessRate;\n};\nvar updateChartData = function(options, setOptions, stateNumeroCuotas, projectValueInvoice, valuePayment, irrValue, setirrValue, projectInitialCost) {\n    var _Math, _Math1;\n    var newSeries = [];\n    var yaxisValues = [];\n    var cfValues = [];\n    var index = 1;\n    var xValue = 0, yValue = 0;\n    var data = null;\n    options.series.map(function(s) {\n        data = s.data.map(function() {\n            if (index <= stateNumeroCuotas.value / 12) {\n                yValue = Math.floor(valuePayment); // Cuota SEOS\n            } else {\n                yValue = Math.floor(0);\n            }\n            ;\n            if (index > 20 && index < 41) {\n                if (index - 20 <= stateNumeroCuotas.value / 12) {\n                    yValue = Math.floor(868 * Math.pow(1 + 0.06270825591, index - 20) * (projectValueInvoice / 868) - valuePayment);\n                } else {\n                    yValue = Math.floor(868 * Math.pow(1 + 0.06270825591, index - 20) * (projectValueInvoice / 868));\n                }\n                cfValues.push(yValue * 12);\n            }\n            ;\n            if (index >= 41) {\n                yValue = Math.floor(868 * Math.pow(1 + 0.06270825591, index - 40) * (projectValueInvoice / 868));\n            }\n            ;\n            xValue = index++ % 20;\n            if (!xValue) {\n                xValue = 20;\n            }\n            yaxisValues.push(yValue);\n            return {\n                x: xValue,\n                y: yValue\n            };\n        });\n        newSeries.push({\n            name: s.name,\n            type: s.type,\n            data: data\n        });\n    });\n    var newyaxis = [];\n    newyaxis.push({\n        labels: {\n            formatter: function formatter(value) {\n                return \"$ \" + Intl.NumberFormat(\"es-CO\").format(value);\n            }\n        },\n        show: true,\n        min: Math.round((_Math = Math).min.apply(_Math, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(yaxisValues)) / 100000) * 100000,\n        max: Math.round((_Math1 = Math).max.apply(_Math1, (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(yaxisValues)) / 100000) * 100000\n    });\n    // console.log(\"cfValues\");\n    // console.log(cfValues);\n    // console.log(\"npv\");\n    // console.log(npv);\n    irrValue = computeIRR(cfValues, cfValues.length, projectInitialCost);\n    // console.log(\"IRR o TIR en espaÃ±ol\");\n    // console.log(irrValue);\n    setirrValue(irrValue);\n    setOptions({\n        series: newSeries,\n        yaxis: newyaxis\n    });\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./helpers/financingHelpers.js\n"));

/***/ })

});